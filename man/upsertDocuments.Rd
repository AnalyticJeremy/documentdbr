% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/upsertDocuments.R
\name{upsertDocuments}
\alias{upsertDocuments}
\title{Interprets the rows in a specified data.frame as documents and upserts those documents.}
\usage{
upsertDocuments(connectionInfo, documentsDataFrame, partitionKeyColumn = "",
  consistencyLevel = "", sessionToken = "", userAgent = "")
}
\arguments{
\item{connectionInfo}{A DocumentDB connection info object generated with getDocumentDbConnectionInfo().}

\item{documentsDataFrame}{A data.frame containing the documents. Ensure that the data.frame has an id column.}

\item{partitionKeyColumn}{Optional. Name of the column which contains the partition key. The partition key points to the partition where the documents are (to be) stored.}

\item{consistencyLevel}{Optional. The consistency level override. The valid values are: Strong, Bounded, Session, or Eventual (in order of strongest to weakest). The override must be the same or weaker than the account's configured consistency level.}

\item{sessionToken}{Optional. A string token used with session level consistency. For more information, see \href{https://azure.microsoft.com/en-us/documentation/articles/documentdb-consistency-levels}{Using consistency levels in DocumentDB}.}

\item{userAgent}{Optional. A string that specifies the client user agent performing the request. The recommended format is {user agent name}/{version}. For example, the official DocumentDB .NET SDK sets the User-Agent string to Microsoft.Document.Client/1.0.0.0. A custom user-agent could be something like ContosoMarketingApp/1.0.0.}
}
\value{
Some information extracted from the REST API response such as request charge and session token.
}
\description{
Interprets the rows in a specified data.frame as documents and upserts those documents.
}
\examples{
# load the documentdbr package
library(documentdbr)

# get a DocumentDbConnectionInfo object
myCollection <- getDocumentDbConnectionInfo(
  accountUrl = "https://somedocumentdbaccount.documents.azure.com",
  primaryOrSecondaryKey = "t0C36UstTJ4c6vdkFyImkaoB6L1yeQidadg6wasSwmaK2s8JxFbEXQ0e3AW9KE1xQqmOn0WtOi3lxloStmSeeg==",
  databaseId = "MyDatabaseId",
  collectionId = "MyCollectionId"
)

# create a data.frame with dummy data
someDataFrame <- data.frame(
  id = 1:10,
  machineId = paste("Machine", 1:10),
  value1 = rnorm(10, 0, 1),
  value2 = rnorm(10, 0, 1),
  value3 = rnorm(10, 0, 1)
)

# upsert the data.frame and print the request charge
upsertResult <- upsertDocuments(myCollection, someDataFrame)
print(upsertResult$requestCharge)
}
